<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.harmelodic</groupId>
    <artifactId>init-microservice</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <image.repository>${project.artifactId}</image.repository>
        <image.tag>${maven.build.timestamp}</image.tag>
        <java.version>24</java.version>
        <maven.build.timestamp.format>yyyy-MM-dd_HH.mm.ss</maven.build.timestamp.format>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Empty argLine for reference in maven-surefire-plugin -->
        <argLine/>
        <opentelemetry-javaagent.version>2.20.1</opentelemetry-javaagent.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>3.5.6</version>
                <type>pom</type>
                <scope>import</scope>
                <!-- Bill of Materials for managing Spring Boot Dependencies -->
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>6.0.0</version>
                <type>pom</type>
                <scope>import</scope>
                <!-- Bill of Materials for managing JUnit dependencies -->
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-bom</artifactId>
                <version>2.21.0</version>
                <type>pom</type>
                <scope>import</scope>
                <!-- Bill of Materials for managing OpenTelemetry instrumentation dependencies -->
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- App Dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <!-- Required for Logging Interface -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <!-- Required for Hooking Logback into Slf4j -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>0.1.5</version>
            <!-- Required for defining Logback JSON Layout -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>0.1.5</version>
            <!-- Required for formatting Logback JSON logs with Jackson -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <!-- Required for Health checks and Telemetry -->
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <!-- Required for exposing Prometheus-compatible metrics -->
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.javaagent</groupId>
            <artifactId>opentelemetry-javaagent</artifactId>
            <version>${opentelemetry-javaagent.version}</version>
            <!-- Required for Zero-code instrumentation with OpenTelemetry, loaded into JIB -->
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-instrumentation-annotations</artifactId>
            <!-- Required for doing custom OpenTelemetry instrumentation -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- Required for Controllers and RestClient -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <!-- Required for JdbcClient -->
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <!-- Required for DB initialisation & migrations -->
        </dependency>

        <!-- Test / Mock Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
            <!-- Required for JUnit -->
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
            <!-- Required for Mockito -->
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
            <!-- Required explicitly for loading Mockito Java agent -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- Required for Spring Boot Testing -->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
            <!-- Required for SpringExtension testing -->
        </dependency>
        <dependency>
            <groupId>au.com.dius.pact.consumer</groupId>
            <artifactId>junit5</artifactId>
            <version>4.6.17</version>
            <scope>test</scope>
            <!-- Required for PACT testing as a Consumer -->
        </dependency>
        <dependency>
            <groupId>au.com.dius.pact.provider</groupId>
            <artifactId>junit5spring</artifactId>
            <version>4.6.17</version>
            <scope>test</scope>
            <!-- Required for PACT testing as a Provider with Spring -->
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <!-- Required for testing with an in-memory DB (test and dev-local) -->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- Runs PMD -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.28.0</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <printFailingErrors>true</printFailingErrors>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required for detecting bugs -->
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.9.8.0</version>
                <configuration>
                    <excludeFilterFile>spotbugs-filter.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required for ensuring modern code -->
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <javaVersion>${java.version}</javaVersion>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required for creating Maven properties of dependencies -->
                <!-- Makes loading the Mockito Java agent in surefire a simple reference -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <!-- By default, `properties` binds to `initialize` phase -->
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required for running tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.4</version>
                <configuration>
                    <argLine>@{argLine} -javaagent:${org.mockito:mockito-core:jar}</argLine>
                    <systemPropertyVariables>
                        <pact_do_not_track>true</pact_do_not_track>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required for publishing PACTs -->
                <groupId>au.com.dius.pact.provider</groupId>
                <artifactId>maven</artifactId>
                <version>4.6.17</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>publish</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <projectVersion>${image.tag}</projectVersion>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required for local usage (building a local fat JAR or using `mvn spring-boot:run` -->
                <!-- The JIB Maven plugin does not require this, as it handles its own packaging -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>3.5.6</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <id>package</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <profiles>
                        <profile>dev-local</profile>
                    </profiles>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required for building into a Container -->
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.4.6</version>
                <configuration>
                    <from>
                        <image>
                            eclipse-temurin:25-jre-alpine@sha256:bf9c91071c4f90afebb31d735f111735975d6fe2b668a82339f8204202203621
                        </image>
                    </from>
                    <to>
                        <image>${image.repository}</image>
                        <tags>
                            <tag>${image.tag}</tag>
                        </tags>
                    </to>
                    <container>
                        <environment>
                            <!-- Default environment variables -->
                            <OTEL_JAVAAGENT_LOGGING>application</OTEL_JAVAAGENT_LOGGING>
                            <OTEL_TRACES_EXPORTER>none</OTEL_TRACES_EXPORTER>
                            <OTEL_METRICS_EXPORTER>none</OTEL_METRICS_EXPORTER>
                            <OTEL_LOGS_EXPORTER>none</OTEL_LOGS_EXPORTER>
                        </environment>
                        <jvmFlags>
                            <jvmFlag>-javaagent:/app/libs/opentelemetry-javaagent-${opentelemetry-javaagent.version}.jar</jvmFlag>
                            <jvmFlag>-Dotel.service.name=init-microservice</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>buildTar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>

                <!-- TEMPORARY: Override ASM to support Java 22 -->
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>9.9</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- Required to disable Maven artifact deployment since we'll instead build a container -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.1.4</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
