name: main

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  maven:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 19
      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: projects/401363556022/locations/global/workloadIdentityPools/automation/providers/github
          service_account: automation@automation-220928.iam.gserviceaccount.com
      - run: gcloud auth configure-docker europe-north1-docker.pkg.dev
      - run: >
          mvn deploy
          -Dimage.repository=europe-north1-docker.pkg.dev/personal-artifacts-353012/harmelodic/init-microservice
          -Dimage.tag=${GITHUB_SHA:-latest}
          -Dpact.verifier.publishResults=true
          -Dpact.broker.url=https://pact.harmelodic.com
          -Dpact.broker.username=pact-broker-user
          -Dpact.broker.password=${{ secrets.PACT_BROKER_PASSWORD }}
        # ^ For publishing Consumer PACTs
        env:
          PACTBROKER_AUTH_USERNAME: pact-broker-user # For publishing Provider results
          PACTBROKER_AUTH_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }} # For publishing Provider results

  terraform:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: projects/401363556022/locations/global/workloadIdentityPools/automation/providers/github
          service_account: automation@automation-220928.iam.gserviceaccount.com
      - run: terraform -chdir=infrastructure init -upgrade
      - run: terraform -chdir=infrastructure validate
      - run: terraform -chdir=infrastructure plan -var-file="prod.tfvars"
