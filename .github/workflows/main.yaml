# $schema: http://json.schemastore.org/github-workflow.json
name: main

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  maven-deploy:
    permissions:
      contents: 'read'
      id-token: 'write' # Fetch OIDC Token for GCP Auth
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 24
      - uses: google-github-actions/auth@v2.1.12
        with:
          workload_identity_provider: projects/401363556022/locations/global/workloadIdentityPools/github/providers/github-oidc
          service_account: automation@automation-220928.iam.gserviceaccount.com
      - run: gcloud auth configure-docker europe-north1-docker.pkg.dev
      - run: >
          mvn deploy
          --no-transfer-progress
          --define image.repository=europe-north1-docker.pkg.dev/personal-artifacts-353012/harmelodic/init-microservice
          --define image.tag=${GITHUB_SHA:-latest}
          --define pact.verifier.publishResults=true
          --define pact.broker.url=https://pact.harmelodic.com
          --define pact.broker.username=pact-broker-user
          --define pact.broker.password=${{ secrets.PACT_BROKER_PASSWORD }}
        # pact.broker.* used for publishing Consumer PACTs
        # pact.verifier.publishResults is for publishing Provider test results
        env:
          PACTBROKER_AUTH_USERNAME: pact-broker-user # For publishing Provider results
          PACTBROKER_AUTH_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }} # For publishing Provider results

  kustomize-build-base-and-overlays:
    permissions:
      contents: 'read'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - run: sudo snap install kustomize
      - run: kustomize build k8s-manifests/base
      - run: kustomize build k8s-manifests/prod

  conftest-test-base-and-overlays:
    permissions:
      contents: 'read'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - run: sudo snap install kustomize
      - name: Install conftest as per https://www.conftest.dev/install/
        run: |
          LATEST_VERSION=$(wget -O - "https://api.github.com/repos/open-policy-agent/conftest/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c 2-)
          ARCH=$(arch)
          SYSTEM=$(uname)
          wget "https://github.com/open-policy-agent/conftest/releases/download/v${LATEST_VERSION}/conftest_${LATEST_VERSION}_${SYSTEM}_${ARCH}.tar.gz"
          tar xzf conftest_${LATEST_VERSION}_${SYSTEM}_${ARCH}.tar.gz
          sudo mv conftest /usr/local/bin
      - run: conftest pull git::https://github.com/Harmelodic/kubernetes-rego-policy.git//policy
      - run: kustomize build k8s-manifests/base | conftest test --output github -
      - run: kustomize build k8s-manifests/prod | conftest test --output github -

  checkov:
    permissions:
      contents: 'read'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      - run: pip install checkov
      - run: checkov --directory infrastructure

  terraform-apply-prod:
    permissions:
      contents: 'read'
      id-token: 'write' # Fetch OIDC Token for GCP Auth
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: google-github-actions/auth@v2.1.12
        with:
          workload_identity_provider: projects/401363556022/locations/global/workloadIdentityPools/github/providers/github-oidc
          service_account: automation@automation-220928.iam.gserviceaccount.com
      - uses: hashicorp/setup-terraform@v3
      - run: terraform -chdir=infrastructure init -upgrade
      - run: terraform -chdir=infrastructure validate
      - run: terraform -chdir=infrastructure workspace select -or-create prod
      - run: terraform -chdir=infrastructure apply # Ideally a CD system, like Atlantis, would handle execution.

  mkdocs-deploy:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      - run: pip install -r requirements.txt
      - run: mkdocs build
      # - run: mkdocs gh-deploy # TODO: Configure to be able to deploy mkdocs

  spectral-lint-openapi:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      - run: npm install -g @stoplight/spectral-cli
      - run: spectral lint api-specs/openapi.yaml

  spectral-lint-asyncapi:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      - run: npm install -g @stoplight/spectral-cli
      - run: spectral lint api-specs/asyncapi.yaml
